# Generated by Django 5.2.3 on 2025-06-24 22:28

import django.db.models.deletion
import taggit.managers
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CalendarioCumpleanos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('paciente', 'Paciente'), ('equipo', 'Equipo del Centro')], max_length=20)),
                ('nombre', models.CharField(max_length=150)),
                ('fecha_cumpleanos', models.DateField()),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'Cumpleaños',
                'verbose_name_plural': 'Cumpleaños',
                'ordering': ['fecha_cumpleanos'],
            },
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id_paciente', models.CharField(editable=False, max_length=50, primary_key=True, serialize=False, unique=True)),
                ('nombres', models.CharField(max_length=100, verbose_name='Nombres')),
                ('apellidos', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('fecha_nacimiento', models.DateField(verbose_name='Fecha de Nacimiento')),
                ('genero', models.CharField(choices=[('Femenino', 'Femenino'), ('Masculino', 'Masculino'), ('Prefiero no decir', 'Prefiero no decir')], max_length=20, verbose_name='Género')),
                ('cedula_identidad', models.CharField(max_length=20, unique=True, verbose_name='Cédula de Identidad')),
                ('telefono', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('direccion', models.CharField(blank=True, max_length=255, null=True, verbose_name='Dirección')),
                ('estado_paciente', models.CharField(choices=[('Activo', 'Activo'), ('En Pausa', 'En Pausa'), ('Dado de Alta', 'Dado de Alta'), ('No Acude', 'No Acude')], default='Activo', max_length=20, verbose_name='Estado del Paciente')),
                ('fecha_registro', models.DateField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('fuente_referencia', models.CharField(choices=[('Recomendación de Paciente', 'Recomendación de Paciente'), ('Redes Sociales', 'Redes Sociales'), ('Google Ads', 'Google Ads'), ('Otro Profesional de Salud', 'Otro Profesional de Salud'), ('Directo', 'Directo'), ('Desconocido', 'Desconocido')], default='Desconocido', max_length=50, verbose_name='Fuente de Referencia')),
                ('motivo_principal_consulta_inicial', models.TextField(blank=True, null=True, verbose_name='Motivo Principal de Consulta Inicial')),
                ('estado_inicial_valoracion', models.CharField(blank=True, max_length=50, null=True, verbose_name='Estado Inicial de Valoración')),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
                'ordering': ['apellidos', 'nombres'],
            },
        ),
        migrations.CreateModel(
            name='PerfilUsuario',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('rol', models.CharField(choices=[('admin', 'Administrador'), ('psicologo', 'Psicólogo'), ('asistente', 'Asistente')], default='asistente', max_length=20)),
            ],
            options={
                'verbose_name': 'Perfil de Usuario',
                'verbose_name_plural': 'Perfiles de Usuarios',
            },
        ),
        migrations.CreateModel(
            name='RedSocial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('canal', models.CharField(choices=[('Instagram', 'Instagram'), ('YouTube', 'YouTube'), ('Facebook', 'Facebook'), ('Twitter', 'Twitter'), ('Otro', 'Otro')], max_length=30)),
                ('fecha_registro', models.DateField(auto_now_add=True)),
                ('seguidores', models.PositiveIntegerField()),
                ('interacciones', models.PositiveIntegerField(blank=True, null=True)),
                ('comentarios', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Métrica de Red Social',
                'verbose_name_plural': 'Métricas de Redes Sociales',
                'ordering': ['-fecha_registro'],
            },
        ),
        migrations.CreateModel(
            name='HistorialCambios',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modelo', models.CharField(max_length=100)),
                ('objeto_id', models.CharField(max_length=100)),
                ('cambio', models.TextField()),
                ('fecha', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentoPaciente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=255)),
                ('archivo', models.FileField(upload_to='documentos_pacientes/')),
                ('fecha_subida', models.DateTimeField(auto_now_add=True)),
                ('descripcion', models.TextField(blank=True)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documentos', to='consultorio.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='Consentimiento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_firma', models.DateTimeField(auto_now_add=True)),
                ('tipo', models.CharField(choices=[('general', 'General'), ('psicoterapia', 'Psicoterapia')], max_length=100)),
                ('firmado_por', models.CharField(max_length=255)),
                ('archivo_pdf', models.FileField(upload_to='consentimientos/')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='consultorio.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='PacientePotencial',
            fields=[
                ('id_potencial', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('nombres', models.CharField(max_length=100)),
                ('apellidos', models.CharField(max_length=100)),
                ('telefono', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('fecha_contacto', models.DateField(auto_now_add=True)),
                ('canal_origen', models.CharField(choices=[('Instagram', 'Instagram'), ('YouTube', 'YouTube'), ('WhatsApp', 'WhatsApp'), ('Directo', 'Directo'), ('Otro', 'Otro')], default='Directo', max_length=50)),
                ('estado', models.CharField(choices=[('prospecto', 'Prospecto'), ('convertido', 'Convertido'), ('descartado', 'Descartado')], default='prospecto', max_length=20)),
                ('fecha_conversion', models.DateField(blank=True, null=True, verbose_name='Fecha de Conversión')),
                ('paciente', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='potencial', to='consultorio.paciente', verbose_name='Paciente Convertido')),
            ],
        ),
        migrations.CreateModel(
            name='InteraccionMarketing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_interaccion', models.DateTimeField(auto_now_add=True)),
                ('tipo_interaccion', models.CharField(choices=[('Llamada', 'Llamada'), ('Mensaje WhatsApp', 'Mensaje WhatsApp'), ('Email', 'Email'), ('Reunión', 'Reunión'), ('Otro', 'Otro')], max_length=50)),
                ('notas', models.TextField(blank=True, null=True, verbose_name='Notas / Detalles')),
                ('paciente_potencial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interacciones', to='consultorio.pacientepotencial')),
            ],
        ),
        migrations.CreateModel(
            name='BotWhatsappMensaje',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remitente', models.CharField(max_length=50)),
                ('destinatario', models.CharField(max_length=50)),
                ('mensaje', models.TextField()),
                ('fecha_envio', models.DateTimeField(auto_now_add=True)),
                ('es_respuesta', models.BooleanField(default=False)),
                ('paciente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mensajes_bot', to='consultorio.paciente')),
                ('paciente_potencial', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mensajes_bot', to='consultorio.pacientepotencial')),
            ],
        ),
        migrations.CreateModel(
            name='Profesional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_completo', models.CharField(max_length=200, verbose_name='Nombre Completo')),
                ('numero_colegiado', models.CharField(max_length=50, unique=True, verbose_name='Número Colegiado')),
                ('especialidad_principal', models.CharField(choices=[('Psicólogo Clínico', 'Psicólogo Clínico'), ('Neuropsicólogo', 'Neuropsicólogo'), ('Psicólogo Infanto-Juvenil', 'Psicólogo Infanto-Juvenil'), ('Terapeuta de Pareja', 'Terapeuta de Pareja'), ('Psicólogo Organizacional', 'Psicólogo Organizacional')], max_length=50, verbose_name='Especialidad Principal')),
                ('email_profesional', models.EmailField(max_length=254, unique=True, verbose_name='Email Profesional')),
                ('horario_atencion', models.CharField(blank=True, max_length=200, null=True, verbose_name='Horario de Atención')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='profesional', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profesional',
                'verbose_name_plural': 'Profesionales',
                'ordering': ['nombre_completo'],
            },
        ),
        migrations.CreateModel(
            name='PlanTerapeutico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_plan', models.CharField(max_length=200, verbose_name='Nombre del Plan')),
                ('fecha_inicio_plan', models.DateField(verbose_name='Fecha de Inicio')),
                ('fecha_fin_estimada', models.DateField(blank=True, null=True, verbose_name='Fecha de Fin Estimada')),
                ('objetivo_principal_terapeutico', models.TextField(verbose_name='Objetivo Principal Terapéutico')),
                ('metas_especificas', models.JSONField(blank=True, default=list, null=True, verbose_name='Metas Específicas')),
                ('enfoque_terapeutico', models.CharField(choices=[('Cognitivo-Conductual', 'Cognitivo-Conductual'), ('Terapia Sistémica', 'Terapia Sistémica'), ('Psicoanálisis', 'Psicoanálisis'), ('Humanista', 'Humanista'), ('Integrativo', 'Integrativo')], default='Cognitivo-Conductual', max_length=50, verbose_name='Enfoque Terapéutico')),
                ('estado_plan', models.CharField(choices=[('Activo', 'Activo'), ('Finalizado', 'Finalizado'), ('En Pausa', 'En Pausa'), ('Cancelado', 'Cancelado')], default='Activo', max_length=20, verbose_name='Estado del Plan')),
                ('fecha_finalizacion_real', models.DateField(blank=True, null=True, verbose_name='Fecha de Finalización Real')),
                ('observaciones_plan', models.TextField(blank=True, null=True, verbose_name='Observaciones del Plan')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planes_terapeuticos', to='consultorio.paciente', verbose_name='Paciente')),
                ('profesional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planes_gestionados', to='consultorio.profesional', verbose_name='Profesional')),
            ],
            options={
                'verbose_name': 'Plan Terapéutico',
                'verbose_name_plural': 'Planes Terapéuticos',
                'ordering': ['-fecha_inicio_plan'],
            },
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField()),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('confirmada', 'Confirmada'), ('cancelada', 'Cancelada'), ('completada', 'Completada')], default='pendiente', max_length=20)),
                ('observaciones', models.TextField(blank=True)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='consultorio.paciente')),
                ('profesional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='consultorio.profesional')),
            ],
        ),
        migrations.CreateModel(
            name='Actividad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_actividad', models.CharField(choices=[('Llamada de seguimiento', 'Llamada de seguimiento'), ('Recordatorio de tarea', 'Recordatorio de tarea'), ('Preparar sesión', 'Preparar sesión'), ('Enviar Email', 'Enviar Email'), ('Otra Tarea', 'Otra Tarea')], default='Otra Tarea', max_length=50, verbose_name='Tipo de Actividad')),
                ('descripcion', models.TextField(default='Sin descripción', verbose_name='Descripción')),
                ('fecha_vencimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de Vencimiento')),
                ('estado_actividad', models.CharField(choices=[('Pendiente', 'Pendiente'), ('Completada', 'Completada'), ('Cancelada', 'Cancelada')], default='Pendiente', max_length=20, verbose_name='Estado de Actividad')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creación')),
                ('paciente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actividades', to='consultorio.paciente', verbose_name='Paciente Asociado')),
                ('profesional_creador', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actividades_creadas', to='consultorio.profesional', verbose_name='Profesional Creador')),
            ],
            options={
                'verbose_name': 'Actividad',
                'verbose_name_plural': 'Actividades',
                'ordering': ['estado_actividad', 'fecha_vencimiento'],
            },
        ),
        migrations.CreateModel(
            name='Sesion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_sesion', models.DateField(verbose_name='Fecha de Sesión')),
                ('hora_inicio', models.TimeField(verbose_name='Hora de Inicio')),
                ('hora_fin', models.TimeField(verbose_name='Hora de Fin')),
                ('duracion_minutos', models.IntegerField(blank=True, null=True, verbose_name='Duración (minutos)')),
                ('tipo_sesion', models.CharField(choices=[('Primera Consulta', 'Primera Consulta'), ('Seguimiento Individual', 'Seguimiento Individual'), ('Terapia de Pareja', 'Terapia de Pareja'), ('Terapia Familiar', 'Terapia Familiar'), ('Online', 'Online'), ('Presencial', 'Presencial'), ('Evaluación', 'Evaluación')], max_length=50, verbose_name='Tipo de Sesión')),
                ('estado_sesion', models.CharField(choices=[('Programada', 'Programada'), ('Confirmada', 'Confirmada'), ('Realizada', 'Realizada'), ('Cancelada_Profesional', 'Cancelada por Profesional'), ('Cancelada_Paciente', 'Cancelada por Paciente'), ('No_Asistida', 'No Asistida')], default='Programada', max_length=30, verbose_name='Estado de Sesión')),
                ('motivo_cancelacion', models.TextField(blank=True, null=True, verbose_name='Motivo de Cancelación')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sesiones', to='consultorio.paciente', verbose_name='Paciente')),
                ('profesional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sesiones_atendidas', to='consultorio.profesional', verbose_name='Profesional')),
            ],
            options={
                'verbose_name': 'Sesión',
                'verbose_name_plural': 'Sesiones',
                'ordering': ['-fecha_sesion', '-hora_inicio'],
            },
        ),
        migrations.CreateModel(
            name='NotaSesion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_nota', models.DateField(auto_now_add=True, verbose_name='Fecha de Nota')),
                ('subjetivo', models.TextField(blank=True, verbose_name='Subjetivo (S)')),
                ('objetivo', models.TextField(blank=True, verbose_name='Objetivo (O)')),
                ('analisis', models.TextField(blank=True, verbose_name='Análisis (A)')),
                ('plan', models.TextField(blank=True, verbose_name='Plan (P)')),
                ('diagnostico_dsm', models.CharField(blank=True, max_length=100, null=True, verbose_name='Diagnóstico (DSM-5)')),
                ('progreso_subjetivo_paciente', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], null=True, verbose_name='Progreso Subjetivo del Paciente (1-10)')),
                ('progreso_objetivo_profesional', models.IntegerField(blank=True, choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9'), (10, '10')], null=True, verbose_name='Progreso Objetivo del Profesional (1-10)')),
                ('tareas_asignadas', models.TextField(blank=True, verbose_name='Tareas Asignadas')),
                ('temas_abordados', models.CharField(blank=True, max_length=255, verbose_name='Temas Abordados (Separar por comas)')),
                ('generated_summary', models.TextField(blank=True, null=True, verbose_name='Resumen Generado por IA')),
                ('etiquetas', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas_sesion', to='consultorio.paciente', verbose_name='Paciente')),
                ('profesional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notas_creadas', to='consultorio.profesional', verbose_name='Profesional')),
                ('sesion', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='nota_sesion', to='consultorio.sesion', verbose_name='Sesión')),
            ],
            options={
                'verbose_name': 'Nota de Sesión',
                'verbose_name_plural': 'Notas de Sesión',
                'ordering': ['-fecha_nota'],
            },
        ),
    ]
